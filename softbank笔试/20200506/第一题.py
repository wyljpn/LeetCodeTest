# ザ・ミッション
# trackさんは小学校の先生で，テストの採点をしています。
# 生徒のモチベーションを上げるために，前回より点数が上がった子に，「おめでとう」とメッセージを書くことにしました。
# しかし，間違って点数が下がった子に「おめでとう」と書くと皮肉になってしまうので，そのようなミスが起こらないように，生徒の点数が上がったかどうかを判定するプログラムの作成をあなたに依頼してきました。
# 生徒の今回の成績 AA と，前回の成績 BB が入力として与えられます。もし前回よりも点数が上がっていればupと出力してください。そうでなければ何も出力しないでください。
#
# 実装の詳細
# CLI
# 入力値を標準入力として受け取り、結果を標準出力するCLIアプリケーションを実装してください。
# 詳細は末尾の「CLI アプリ作成用テンプレート」を参照ください。
#
# 入力ルール
# 以下のようにプログラムが実行されます。
#
# ./myApp
# このプログラムに、以下のフォーマットの標準入力が与えられます。
#
# AA BB
# 制約は以下の通りです。
#
# 0 \le A, B \le 1000≤A,B≤100, 整数
# 出力ルール
# 以下のフォーマットで標準出力に解答を出力してください。
#
# answer
# 前回よりも成績が上がっていれば， 11 行目にupと出力してください。
# そうでなければ，何も出力しないでください。
# 入出力例
# 例 1
# 標準入力 (sample1.in)
#
# 100 50
# 標準出力
#
# up
# 今回の点数は 100100 点で，前回より上がっています。
#
# 例 2
# 標準入力 (sample2.in)
#
# 70 70
# 標準出力
#
# 成績が変わっていない場合は，何も出力しないでください。
#
# なお、期待する入出力は test/basic_testcases.json にいくつか定義されています。
# 実装する際の参考にしてください。

#!/usr/bin/env python
# -*- coding: utf-8 -*-

#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys

def main(lines):
    # このコードは標準入力と標準出力を用いたサンプルコードです。
    # このコードは好きなように編集・削除してもらって構いません。
    # ---
    # This is a sample code to use stdin and stdout
    # Edit and remove this code as you like.

    for i, v in enumerate(lines):
        s1, s2 = v.split(" ")
        if int(s1) > int(s2):
            print("up")

if __name__ == '__main__':
    lines = []
    for l in sys.stdin:
        lines.append(l.rstrip('\r\n'))
    main(lines)
